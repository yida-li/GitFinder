[{"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\index.js":"1","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\App.js":"2","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\layout\\Alert.js":"4","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\users\\Search.js":"5","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\users\\User.js":"6","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\pages\\about.js":"7","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\users\\Users.js":"8","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\layout\\Spinner.js":"9","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\users\\UserItem.js":"10","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\repos\\Repos.js":"11","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\repos\\RepoItem.js":"12"},{"size":419,"mtime":1610796198759,"results":"13","hashOfConfig":"14"},{"size":3482,"mtime":1610796198751,"results":"15","hashOfConfig":"14"},{"size":720,"mtime":1610796198753,"results":"16","hashOfConfig":"14"},{"size":257,"mtime":1610796198753,"results":"17","hashOfConfig":"14"},{"size":1297,"mtime":1610796198758,"results":"18","hashOfConfig":"14"},{"size":3619,"mtime":1610796198758,"results":"19","hashOfConfig":"14"},{"size":139,"mtime":1610796198755,"results":"20","hashOfConfig":"14"},{"size":647,"mtime":1610796198759,"results":"21","hashOfConfig":"14"},{"size":415,"mtime":1610796198754,"results":"22","hashOfConfig":"14"},{"size":633,"mtime":1610796198759,"results":"23","hashOfConfig":"14"},{"size":300,"mtime":1610796198757,"results":"24","hashOfConfig":"14"},{"size":338,"mtime":1610796198757,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ygzat3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\index.js",[],["53","54","55"],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\App.js",["56"],"import React, { useState, Fragment } from 'react';\r\n\r\nimport './App.css';\r\nimport Navbar from './components/layout/Navbar';\r\nimport { Router, Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport Users from './components/users/Users';\r\nimport axios from 'axios';\r\nimport Search from './components/users/Search';\r\nimport { Alert } from './components/layout/Alert';\r\nimport { about } from './components/pages/about';\r\nimport User from './components/users/User';\r\n\r\nconst  App =()=> { \r\n\r\nconst [users,setUsers] = useState([]);\r\nconst [user,setUser] = useState({});\r\nconst [repos,setRepos] = useState([]);\r\nconst [loading,setLoading] = useState(false);\r\nconst [alert,setAlert] = useState(null);\r\n\r\n \r\n\r\n  // Search\r\n  const searchUsers = async (text) => {\r\n\r\n    setLoading(true);\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\r\n      &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    setUsers(res.data.items);\r\n    setLoading(false);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   const clearUsers = () => {\r\n    \r\n\r\n    setUsers([]);\r\n    setLoading(false);\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // get the info of a single Github user\r\n  const getUser = async (username) => {\r\n    setLoading(true);\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\r\n      &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n      setUser(res.data);\r\n      setLoading(false);\r\n    \r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // get users repos\r\n  const getUserRepos = async (username) => {\r\n    setLoading(true);\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\r\n      &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n\r\n    setRepos(res.data);\r\n    setLoading(false);\r\n  \r\n  };\r\n\r\n\r\n\r\n\r\n  const showAlert = (msg, type) => {\r\n    setAlert({msg, type});\r\n\r\n    setTimeout(() => setAlert(null), 5000);\r\n  };\r\n\r\n\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className='App'>\r\n          <Navbar />\r\n\r\n          <div className='container'>\r\n            <Alert alert={alert} />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/'\r\n                render={(props) => (\r\n                  <Fragment>\r\n                    <Search\r\n                      searchUsers={searchUsers}\r\n                      clearUsers={clearUsers}\r\n                      showClear={users.length > 0 ? true : false}\r\n                      setAlert={showAlert}\r\n                    />\r\n\r\n                    <Users loading={loading} users={users}></Users>\r\n                  </Fragment>\r\n                )}\r\n              />\r\n\r\n              <Route exact path='/about' component={about} />\r\n              <Route\r\n                exact\r\n                path='/user/:login'\r\n                render={(props) => (\r\n                  <User\r\n                    {...props}\r\n                    getUser={getUser}\r\n                    getUserRepos={getUserRepos}\r\n                    repos={repos}\r\n                    user={user}\r\n                    loading={loading}\r\n                  />\r\n                )}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\users\\Search.js",[],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\users\\User.js",["57","58"],"import React, { Component, Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport Repos from '../repos/Repos';\r\n\r\n const User =({user,loading,getUser,getUserRepos, repos, match})=> {\r\n\r\n\r\n\r\nuseEffect(()=>{\r\ngetUser(match.params.login);\r\ngetUserRepos(match.params.login);\r\n// eslint-disable-next\r\n},[]);\r\n\r\n  \r\n \r\n  \r\n    const {\r\n      name,\r\n      avatar_url,\r\n      location,\r\n      company,\r\n      bio,\r\n      blog,\r\n      login,\r\n      html_url,\r\n      followers,\r\n      following,\r\n      public_repos,\r\n      public_gists,\r\n      hireable,\r\n    } = user;\r\n\r\n    \r\n    if (loading) return <Spinner />;\r\n    else\r\n      return (\r\n        <Fragment>\r\n          <Link to='/' className='btn btn-light'>\r\n            Back to Search\r\n          </Link>\r\n          Hireable:{' '}\r\n          {hireable ? (\r\n            <i className='fas fa-check text-success' />\r\n          ) : (\r\n            <i className='fas fa-times-circle text-danger' />\r\n          )}\r\n          <div className='card grid-2'>\r\n            <div className='all-center'>\r\n              <img\r\n                src={avatar_url}\r\n                className='round-img'\r\n                alt=''\r\n                style={{ width: '150px' }}\r\n              />\r\n\r\n              <h1>{name}</h1>\r\n              <p>Location: {location}</p>\r\n            </div>\r\n            <div>\r\n              {bio && (\r\n                <Fragment>\r\n                  <h3>Bio</h3>\r\n                  <p>{bio}</p>\r\n                </Fragment> // The reason why brad keeps using fragments: Fragments always exist within the context of a given Activity and can always access that Activity. By storing the information of interest within the Activity, the Fragment for each screen can simply access the object reference through the Activity\r\n              )}\r\n\r\n              <a href={html_url} className='btn btn-dark my-1'>\r\n                View CV\r\n              </a>\r\n              <ul>\r\n                <li>\r\n                  {login && (\r\n                    <Fragment>\r\n                      <strong>Username:</strong>\r\n                      {login}\r\n                    </Fragment>\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  {company && (\r\n                    <Fragment>\r\n                      <strong>Company:</strong>\r\n                      {company}\r\n                    </Fragment>\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  {blog && (\r\n                    <Fragment>\r\n                      <strong>Website:</strong>\r\n                      {blog}\r\n                    </Fragment>\r\n                  )}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className='card text-center'>\r\n            <div className='badge badge-primary'> Followers :{followers}</div>\r\n            <div className='badge badge-success'> Following :{following}</div>\r\n            <div className='badge badge-light'>\r\n              {' '}\r\n              Public Gist :{public_gists}\r\n            </div>\r\n            <div className='badge badge-dark'>\r\n              {' '}\r\n              Public Repos :{public_repos}\r\n            </div>\r\n          </div>\r\n          <Repos repos={repos} />\r\n        </Fragment>\r\n      );\r\n  \r\n}\r\nUser.propTypes = {\r\n  loading: PropTypes.bool,\r\n  user: PropTypes.object.isRequired,\r\n  getUser: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  getUserRepos: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\pages\\about.js",[],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\users\\Users.js",[],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\users\\UserItem.js",[],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\repos\\Repos.js",[],"C:\\Users\\Abstinence Emperor\\Desktop\\workspace\\human-tracker\\src\\components\\repos\\RepoItem.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":16},{"ruleId":"65","severity":1,"message":"69","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":15,"column":3,"nodeType":"72","endLine":15,"endColumn":5,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUser', 'getUserRepos', and 'match.params.login'. Either include them or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [getUser, getUserRepos, match.params.login]",{"range":"79","text":"80"},[408,410],"[getUser, getUserRepos, match.params.login]"]